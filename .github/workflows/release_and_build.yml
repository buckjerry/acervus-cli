name: new_release

on:
  push:
    branches: [ main ]

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Read release.json
        uses: notiz-dev/github-action-json-property@release
        id: package_info
        with:
          path: 'release.json'
          prop_path: 'version'

      - name: Show version number
        run: echo "Version is ${{ steps.package_info.outputs.prop }}"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.package_info.outputs.prop }}"
          release_name: Release v${{ steps.package_info.outputs.prop }}
  build:
    needs:
      - create_release
    name: build_to_release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [ linux, windows, darwin ]
        goarch: [ "386", amd64, arm64 ]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Read version from release.json
        uses: notiz-dev/github-action-json-property@release
        id: acervus_version
        with:
          path: 'release.json'
          prop_path: 'version'

      - name: Read go_version from release.json
        uses: notiz-dev/github-action-json-property@release
        id: go_version
        with:
          path: 'release.json'
          prop_path: 'go_version'

      - name: Build acervus binary
        uses: wangyoucao577/go-release-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: "https://dl.google.com/go/go${{ steps.go_version.outputs.prop }}.linux-amd64.tar.gz"
          release_tag: "v${{ steps.acervus_version.outputs.prop }}"
          # if we don't want to use default "go build" command, we can modify it like this:
          # build_command: make
          # binary_name: acervus